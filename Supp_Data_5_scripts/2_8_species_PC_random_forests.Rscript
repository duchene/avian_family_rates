library(brms)
library(arm)
library(caret)


# Load data sets

xpath = 'regressions_data_Bayes_species_x.csv'
ypath = 'y_data_PCs.csv'
X=read.csv(xpath)
X = X[,2:ncol(X)]

y = read.csv(ypath)
out = list()
choices = colnames(y)[2:ncol(y)]


# Start parallel computing

library(doParallel)
registerDoParallel(42)
out = foreach(choice = 1:length(choices)) %dopar% {

	X=read.csv(xpath)
	X = X[,2:ncol(X)]

	y = read.csv(ypath)
	y = y[,choices[choice]]
	
	
	# Prepare data format

	X$mode.Habitat = as.factor(X$mode.Habitat)
	X$mode.Trophic.Level = as.factor(X$mode.Trophic.Level)
	X$mode.Primary.Lifestyle = as.factor(X$mode.Primary.Lifestyle)

	X <- X[, !apply(X, 2, anyNA)]
	nms = colnames(X)
	nms = gsub("\\.\\.", ".", nms)
	nms = gsub('\\.','_',nms)
	nms = gsub('_$','',nms)


	# Run random forest analysis

	control <- trainControl(method="cv", number=5)
	tunegrid <- expand.grid(.mtry=c(2:6))
	tr <- train(y~., data=data.frame(y=y,X), method="rf", metric="RMSE", 
					tuneGrid=tunegrid, ntree = 500, trControl=control)

	vi = varImp(tr, scale = TRUE)
	vi = as.data.frame(vi$importance)
	out[[choice]]=as.data.frame(vi)
}


# Save results

for(i in 1:length(choices)){
	response_name = choices[i]
	response_name = gsub("\\.","_",response_name)
	csv_name = paste0("/home/sjbhatt/",response_name,"_species_RF.csv")
	write.csv(out[[i]], csv_name, row.names = TRUE)

}
